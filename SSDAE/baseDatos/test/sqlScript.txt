
CREATE TABLE IF NOT EXISTS Usuarios
(
    id_usuario serial PRIMARY KEY,
    correo character varying NOT NULL UNIQUE,
    contrasena character varying NOT NULL,
    tipo_usuario character varying NOT NULL,
    nombre character varying NOT NULL,
    ap_p character varying NOT NULL,
    ap_m character varying NOT NULL
);


CREATE TABLE IF NOT EXISTS Recuperaciones
(
    id_recuperacion serial PRIMARY KEY,
    correo character varying REFERENCES Usuarios(correo) ON UPDATE CASCADE ON DELETE CASCADE,
    token character varying NOT NULL,
    fecha_expiracion date NOT NULL
);


CREATE TABLE IF NOT EXISTS Alumnos	
(
    id_alumno serial PRIMARY KEY REFERENCES Usuarios ON UPDATE CASCADE ON DELETE CASCADE,
    estatus character varying NOT NULL,
    ano_ingreso serial NOT NULL,
    ciclo character varying NOT NULL
);

CREATE TABLE IF NOT EXISTS Profesores
(
    id_profesor serial PRIMARY KEY REFERENCES Usuarios ON UPDATE CASCADE ON DELETE CASCADE,
    interno_externo character varying NOT NULL
);


CREATE TABLE IF NOT EXISTS Tesis
(
    id_tesis serial PRIMARY KEY,
    tema character varying NOT NULL,
    id_alumno serial REFERENCES Alumnos ON UPDATE CASCADE ON DELETE CASCADE,
    descripcion character varying NOT NULL
);


CREATE TABLE IF NOT EXISTS Prof_Tesis
(
    id_profesor serial REFERENCES Profesores ON UPDATE CASCADE ON DELETE CASCADE,
    id_tesis serial REFERENCES Tesis ON UPDATE CASCADE ON DELETE CASCADE,
    rol character varying NOT NULL,
    CONSTRAINT Prof_Tesis_primarykey PRIMARY KEY (id_profesor, id_tesis)
);

CREATE TABLE IF NOT EXISTS Avances
(
    numero_avance serial,
    id_tesis serial REFERENCES Tesis ON UPDATE CASCADE ON DELETE CASCADE,
    doc character varying NOT NULL,
    revisado character varying NOT NULL,
    CONSTRAINT numero_avance_id_tesis PRIMARY KEY (numero_avance, id_tesis)
);
		 
INSERT INTO Usuarios
	VALUES (default,'root@gmail.com', 'c4ca4238a0b923820dcc509a6f75849b', 'root', 'jose', 'sanchez', 'soto');
	
INSERT INTO Alumnos
	VALUES (default,'root', '10/10/10');
	

END;



