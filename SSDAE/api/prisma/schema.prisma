generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:popohq14@localhost:5432/test"
}

model Alumnos {
  id_alumno Int      @id(map: "id_alumno") @default(autoincrement())
  estatus   String   @db.VarChar
  fecha_ing DateTime @db.Date
  Usuarios  Usuarios @relation(fields: [id_alumno], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "id_alumnos")
  Tesis     Tesis[]
}

model Profesores {
  id_profesor     Int      @id(map: "id_profesor") @default(autoincrement())
  interno_externo Int
  Usuarios        Usuarios @relation(fields: [id_profesor], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "id_profesores")
}

model Recuperaciones {
  correo           String   @db.VarChar
  token            String   @db.VarChar
  fecha_expiracion DateTime @db.Date
  id_recuperacion  Int      @id(map: "correo_token") @default(autoincrement())
  Usuarios         Usuarios @relation(fields: [correo], references: [correo], onDelete: NoAction, onUpdate: NoAction, map: "correo")
}

model Usuarios {
  id_usuario     Int              @id(map: "id_usuario") @default(autoincrement())
  correo         String           @unique(map: "correo") @db.VarChar
  contrasena     String           @db.VarChar
  tipo_usuario   String           @db.VarChar
  nombre         String           @db.VarChar
  ap_p           String           @db.VarChar
  ap_m           String           @db.VarChar
  Alumnos        Alumnos?
  Profesores     Profesores?
  Recuperaciones Recuperaciones[]
}

model Tesis {
  id_tesis    Int     @id @default(autoincrement())
  tema        String  @db.VarChar
  id_alumno   Int     @default(autoincrement())
  descripcion String  @db.VarChar
  Alumnos     Alumnos @relation(fields: [id_alumno], references: [id_alumno], onDelete: NoAction, onUpdate: NoAction, map: "id_alumno")
}
